#+title: river-hs
#+author: Hikari


* Dotfiles
These are my dotfiles for my nixOS setup, using riverWM configured in haskell through [[https://codeberg.org/Hikari/river-hs][river-hs]].

** Necessary stuff
 You might need to run
 #+BEGIN_SRC bash
 dbus-update-activation-environment WAYLAND_DISPLAY
 #+END_SRC
 so dunst finds the WAYLAND_DISPLAY variable correctly.


** Information
 This is a flake based setup, most things have been split into modules and wrapper-manager has been used.
 This also houses my emacs config which can be found in [[./modules/conf/emacs.el]], it uses Nix as its package manager instead of Elpaca or Straight.el.


** LICENSE
 This is licensed under the terms of the GPLv2 license.

** Directory structure
 #+BEGIN_SRC bash
 ├── dot_config
 │   ├── Pictures
 │   │   └── cat-waves.png
 │   └── river
 │       ├── app
 │       │   └── Main.hs
 │       ├── cabal.project.local
 │       ├── CHANGELOG.md
 │       ├── init
 │       ├── LICENSE
 │       ├── river-hs.cabal
 │       ├── src
 │       │   └── River.hs
 │       ├── tests
 │       │   └── Tests.hs
 │       └── wallpaper.fish
 ├── flake.lock
 ├── flake.nix
 ├── LICENSE
 ├── modules
 │   ├── base
 │   │   ├── config.nix
 │   │   └── hardware.nix
 │   ├── conf
 │   │   ├── config.nu
 │   │   ├── dunstrc
 │   │   ├── emacs.el
 │   │   ├── foot.ini
 │   │   ├── fuzzel.ini
 │   │   ├── gitconfig
 │   │   ├── i3bar-river.toml
 │   │   └── i3status-rust.toml
 │   ├── default.nix
 │   └── programs
 │       ├── dunst
 │       │   └── default.nix
 │       ├── foot
 │       │   └── default.nix
 │       ├── fuzzel
 │       │   └── default.nix
 │       ├── git
 │       │   └── default.nix
 │       ├── i3bar-river
 │       │   └── default.nix
 │       ├── i3status-rust
 │       │   └── default.nix
 │       └── nu
 │           └── default.nix
 ├── README.org
 └── screenshot.png

 18 directories, 33 files
 #+END_SRC

** Screenshot
[[./screenshot.png]]

